# Generated by Django 3.2.8 on 2021-11-04 12:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aircrafts',
            fields=[
                ('aircraft_code', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Код самолета')),
                ('model', models.TextField(verbose_name='Модель самолета')),
                ('range', models.PositiveIntegerField(verbose_name='Дальность')),
            ],
            options={
                'verbose_name': 'Самолет',
                'verbose_name_plural': 'Самолеты',
            },
        ),
        migrations.CreateModel(
            name='Airports',
            fields=[
                ('airport_code', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Код аэропорта')),
                ('airport_name', models.TextField(unique=True, verbose_name='Название аэропорта')),
                ('city', models.TextField(verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Аэропорт',
                'verbose_name_plural': 'Аэропорты',
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('book_ref', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Номер должен содержать 6 символов', regex='^\\w{6}$')], verbose_name='Номер бронирования')),
                ('book_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата бронирования')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Полная сумма')),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирования',
            },
        ),
        migrations.CreateModel(
            name='Flights',
            fields=[
                ('flight_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('flight_no', models.CharField(max_length=6, verbose_name='Номер рейса')),
                ('scheduled_departure_date', models.DateField(verbose_name='Дата вылета')),
                ('scheduled_departure_time', models.TimeField(verbose_name='Время вылета')),
                ('scheduled_arrival', models.DateTimeField(verbose_name='Время прилета по расписанию')),
                ('status', models.CharField(max_length=20, verbose_name='Статус рейса')),
                ('aircraft_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_aircraft_flight', to='fly.aircrafts', verbose_name='Код самолета')),
                ('arrival_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flight_v_airport', to='fly.airports', verbose_name='Аэропорт прилета')),
                ('departure_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flight_iz_airport', to='fly.airports', verbose_name='Аэропорт вылета')),
            ],
            options={
                'verbose_name': 'Рейс',
                'verbose_name_plural': 'Рейсы',
                'unique_together': {('flight_id', 'flight_no')},
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('ticket_no', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Номер должен содержать 13 символов', regex='^\\d{13}$')], verbose_name='Номер билета')),
                ('passenger_id', models.CharField(max_length=30, verbose_name='Идентификатор пассажира')),
                ('passenger_name', models.TextField(verbose_name='Имя пассажира')),
                ('contact_data', models.CharField(max_length=12, verbose_name='Контактные данные пассажира')),
                ('book_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='no_booking', to='fly.bookings', verbose_name='Номер бронирования')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
        migrations.CreateModel(
            name='Ticket_flights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fare_conditions', models.CharField(choices=[('E', 'Economy'), ('C', 'Comfort'), ('B', 'Business')], max_length=1, verbose_name='Класс обслуживания')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость перелета')),
                ('boarding_no', models.CharField(max_length=6, verbose_name='Номер посадочного талона')),
                ('seat_no', models.CharField(max_length=3, verbose_name='Номер места')),
                ('flight_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_flight', to='fly.flights', verbose_name='Рейс')),
                ('ticket_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='no_ticket', to='fly.tickets', verbose_name='Номер билета')),
            ],
            options={
                'verbose_name': 'Перелет',
                'verbose_name_plural': 'Перелеты',
            },
        ),
        migrations.CreateModel(
            name='Seats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_no', models.CharField(max_length=3, verbose_name='Номер места в самолете')),
                ('fare_conditions', models.CharField(choices=[('E', 'Economy'), ('C', 'Comfort'), ('B', 'Business')], max_length=10, verbose_name='Класс обслуживания')),
                ('aircraft_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_aircraft_seat', to='fly.aircrafts', verbose_name='Код самолета')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
                'unique_together': {('aircraft_code', 'seat_no')},
            },
        ),
    ]
